"""
Proxied wrapper functions for billing-bookkeeper dev - bulk_basic_auto_adjust_advice.

Auto-generated by stolon sync spec - do not edit directly.
These wrappers route requests through the stolon server for automatic
token management, logging, and retry logic.

The underlying OpenAPI client is in stolon.openapi_generated - DO NOT EDIT those files.
These wrapper files in stolon.generated can be customized if needed.
"""

import datetime

from stolon.client import StolonClient
from stolon.models import OpenAPIService
from stolon.openapi_generated.billing_bookkeeper_dev.open_api_definition_client.models.api_bulk_auto_adjust_advice import (
    ApiBulkAutoAdjustAdvice,
)
from stolon.openapi_generated.billing_bookkeeper_dev.open_api_definition_client.models.create_basic_bulk_auto_adjust_advice_body import (
    CreateBasicBulkAutoAdjustAdviceBody,
)
from stolon.openapi_generated.billing_bookkeeper_dev.open_api_definition_client.types import Response
from stolon.serialization import deserialize_result, serialize_argument


def create_basic_bulk_auto_adjust_advice_sync_detailed(
    *,
    client: StolonClient,
    body: CreateBasicBulkAutoAdjustAdviceBody,
    rule_uuid: str,
    start_date: datetime.date,
    total_periods: int,
    max_units: float,
    max_amount: float,
    currency: str,
    reference: str,
    email_address: str,
) -> Response[ApiBulkAutoAdjustAdvice]:
    """Create bulk basic auto-adjust advice

    Args:
        rule_uuid (str):
        start_date (datetime.date):
        total_periods (int):
        max_units (float):
        max_amount (float):
        currency (str):
        reference (str):
        email_address (str):
        body (CreateBasicBulkAutoAdjustAdviceBody):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ApiBulkAutoAdjustAdvice]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                body: CreateBasicBulkAutoAdjustAdviceBody
        rule_uuid: str
        start_date: datetime.date
        total_periods: int
        max_units: float
        max_amount: float
        currency: str
        reference: str
        email_address: str

    Returns:
        Response[ApiBulkAutoAdjustAdvice]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "body": serialize_argument(body),
        "rule_uuid": serialize_argument(rule_uuid),
        "start_date": serialize_argument(start_date),
        "total_periods": serialize_argument(total_periods),
        "max_units": serialize_argument(max_units),
        "max_amount": serialize_argument(max_amount),
        "currency": serialize_argument(currency),
        "reference": serialize_argument(reference),
        "email_address": serialize_argument(email_address),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="bulk_basic_auto_adjust_advice.create_basic_bulk_auto_adjust_advice",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ApiBulkAutoAdjustAdvice]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def create_basic_bulk_auto_adjust_advice_sync(
    *,
    client: StolonClient,
    body: CreateBasicBulkAutoAdjustAdviceBody,
    rule_uuid: str,
    start_date: datetime.date,
    total_periods: int,
    max_units: float,
    max_amount: float,
    currency: str,
    reference: str,
    email_address: str,
) -> ApiBulkAutoAdjustAdvice | None:
    """Create bulk basic auto-adjust advice

    Args:
        rule_uuid (str):
        start_date (datetime.date):
        total_periods (int):
        max_units (float):
        max_amount (float):
        currency (str):
        reference (str):
        email_address (str):
        body (CreateBasicBulkAutoAdjustAdviceBody):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ApiBulkAutoAdjustAdvice

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                body: CreateBasicBulkAutoAdjustAdviceBody
        rule_uuid: str
        start_date: datetime.date
        total_periods: int
        max_units: float
        max_amount: float
        currency: str
        reference: str
        email_address: str

    Returns:
        ApiBulkAutoAdjustAdvice | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "body": serialize_argument(body),
        "rule_uuid": serialize_argument(rule_uuid),
        "start_date": serialize_argument(start_date),
        "total_periods": serialize_argument(total_periods),
        "max_units": serialize_argument(max_units),
        "max_amount": serialize_argument(max_amount),
        "currency": serialize_argument(currency),
        "reference": serialize_argument(reference),
        "email_address": serialize_argument(email_address),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="bulk_basic_auto_adjust_advice.create_basic_bulk_auto_adjust_advice",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ApiBulkAutoAdjustAdvice]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def create_basic_bulk_auto_adjust_advice_asyncio_detailed(
    *,
    client: StolonClient,
    body: CreateBasicBulkAutoAdjustAdviceBody,
    rule_uuid: str,
    start_date: datetime.date,
    total_periods: int,
    max_units: float,
    max_amount: float,
    currency: str,
    reference: str,
    email_address: str,
) -> Response[ApiBulkAutoAdjustAdvice]:
    """Create bulk basic auto-adjust advice

    Args:
        rule_uuid (str):
        start_date (datetime.date):
        total_periods (int):
        max_units (float):
        max_amount (float):
        currency (str):
        reference (str):
        email_address (str):
        body (CreateBasicBulkAutoAdjustAdviceBody):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ApiBulkAutoAdjustAdvice]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                body: CreateBasicBulkAutoAdjustAdviceBody
        rule_uuid: str
        start_date: datetime.date
        total_periods: int
        max_units: float
        max_amount: float
        currency: str
        reference: str
        email_address: str

    Returns:
        Response[ApiBulkAutoAdjustAdvice]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "body": serialize_argument(body),
        "rule_uuid": serialize_argument(rule_uuid),
        "start_date": serialize_argument(start_date),
        "total_periods": serialize_argument(total_periods),
        "max_units": serialize_argument(max_units),
        "max_amount": serialize_argument(max_amount),
        "currency": serialize_argument(currency),
        "reference": serialize_argument(reference),
        "email_address": serialize_argument(email_address),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="bulk_basic_auto_adjust_advice.create_basic_bulk_auto_adjust_advice",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ApiBulkAutoAdjustAdvice]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def create_basic_bulk_auto_adjust_advice_asyncio(
    *,
    client: StolonClient,
    body: CreateBasicBulkAutoAdjustAdviceBody,
    rule_uuid: str,
    start_date: datetime.date,
    total_periods: int,
    max_units: float,
    max_amount: float,
    currency: str,
    reference: str,
    email_address: str,
) -> ApiBulkAutoAdjustAdvice | None:
    """Create bulk basic auto-adjust advice

    Args:
        rule_uuid (str):
        start_date (datetime.date):
        total_periods (int):
        max_units (float):
        max_amount (float):
        currency (str):
        reference (str):
        email_address (str):
        body (CreateBasicBulkAutoAdjustAdviceBody):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ApiBulkAutoAdjustAdvice

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                body: CreateBasicBulkAutoAdjustAdviceBody
        rule_uuid: str
        start_date: datetime.date
        total_periods: int
        max_units: float
        max_amount: float
        currency: str
        reference: str
        email_address: str

    Returns:
        ApiBulkAutoAdjustAdvice | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "body": serialize_argument(body),
        "rule_uuid": serialize_argument(rule_uuid),
        "start_date": serialize_argument(start_date),
        "total_periods": serialize_argument(total_periods),
        "max_units": serialize_argument(max_units),
        "max_amount": serialize_argument(max_amount),
        "currency": serialize_argument(currency),
        "reference": serialize_argument(reference),
        "email_address": serialize_argument(email_address),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="bulk_basic_auto_adjust_advice.create_basic_bulk_auto_adjust_advice",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ApiBulkAutoAdjustAdvice]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]
