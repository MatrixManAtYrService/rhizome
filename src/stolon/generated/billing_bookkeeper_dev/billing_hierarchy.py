"""
Proxied wrapper functions for billing-bookkeeper dev - billing_hierarchy.

Auto-generated by stolon sync spec - do not edit directly.
These wrappers route requests through the stolon server for automatic
token management, logging, and retry logic.

The underlying OpenAPI client is in stolon.openapi_generated - DO NOT EDIT those files.
These wrapper files in stolon.generated can be customized if needed.
"""

import datetime
from typing import Union

from stolon.client import StolonClient
from stolon.models import OpenAPIService
from stolon.openapi_generated.billing_bookkeeper_dev.open_api_definition_client.models.api_billing_hierarchy import (
    ApiBillingHierarchy,
)
from stolon.openapi_generated.billing_bookkeeper_dev.open_api_definition_client.models.api_billing_hierarchy_level import (
    ApiBillingHierarchyLevel,
)
from stolon.openapi_generated.billing_bookkeeper_dev.open_api_definition_client.models.api_billing_hierarchy_level_node import (
    ApiBillingHierarchyLevelNode,
)
from stolon.openapi_generated.billing_bookkeeper_dev.open_api_definition_client.models.get_billing_hierarchy_child_nodes_entity_types_item import (
    GetBillingHierarchyChildNodesEntityTypesItem,
)
from stolon.openapi_generated.billing_bookkeeper_dev.open_api_definition_client.models.response_error import (
    ResponseError,
)
from stolon.openapi_generated.billing_bookkeeper_dev.open_api_definition_client.types import UNSET, Response, Unset
from stolon.serialization import deserialize_result, serialize_argument


def get_billing_hierarchy_children_sync_detailed(
    *, client: StolonClient, uuid: str, date: datetime.date, exclude_merchants: Union[Unset, bool] = UNSET
) -> Response[ResponseError]:
    """Get immediate children of billing hierarchy

    Args:
        uuid (str):
        date (datetime.date):
        exclude_merchants (Union[Unset, bool]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date
        exclude_merchants: Union[Unset, bool]

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "uuid": serialize_argument(uuid),
        "date": serialize_argument(date),
        "exclude_merchants": serialize_argument(exclude_merchants),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_children",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_children_sync(
    *, client: StolonClient, uuid: str, date: datetime.date, exclude_merchants: Union[Unset, bool] = UNSET
) -> ResponseError | None:
    """Get immediate children of billing hierarchy

    Args:
        uuid (str):
        date (datetime.date):
        exclude_merchants (Union[Unset, bool]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date
        exclude_merchants: Union[Unset, bool]

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "uuid": serialize_argument(uuid),
        "date": serialize_argument(date),
        "exclude_merchants": serialize_argument(exclude_merchants),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_children",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_children_asyncio_detailed(
    *, client: StolonClient, uuid: str, date: datetime.date, exclude_merchants: Union[Unset, bool] = UNSET
) -> Response[ResponseError]:
    """Get immediate children of billing hierarchy

    Args:
        uuid (str):
        date (datetime.date):
        exclude_merchants (Union[Unset, bool]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date
        exclude_merchants: Union[Unset, bool]

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "uuid": serialize_argument(uuid),
        "date": serialize_argument(date),
        "exclude_merchants": serialize_argument(exclude_merchants),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_children",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_children_asyncio(
    *, client: StolonClient, uuid: str, date: datetime.date, exclude_merchants: Union[Unset, bool] = UNSET
) -> ResponseError | None:
    """Get immediate children of billing hierarchy

    Args:
        uuid (str):
        date (datetime.date):
        exclude_merchants (Union[Unset, bool]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date
        exclude_merchants: Union[Unset, bool]

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "uuid": serialize_argument(uuid),
        "date": serialize_argument(date),
        "exclude_merchants": serialize_argument(exclude_merchants),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_children",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def move_merchant_billing_hierarchies_sync_detailed(
    *, client: StolonClient, body: list[str], new_parent_billing_entity_uuid: str, date: datetime.date
) -> Response[ResponseError]:
    """Move billing hierarchy merchants

    Args:
        new_parent_billing_entity_uuid (str):
        date (datetime.date):
        body (list[str]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                body: list[str]
        new_parent_billing_entity_uuid: str
        date: datetime.date

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "body": serialize_argument(body),
        "new_parent_billing_entity_uuid": serialize_argument(new_parent_billing_entity_uuid),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.move_merchant_billing_hierarchies",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def move_merchant_billing_hierarchies_sync(
    *, client: StolonClient, body: list[str], new_parent_billing_entity_uuid: str, date: datetime.date
) -> ResponseError | None:
    """Move billing hierarchy merchants

    Args:
        new_parent_billing_entity_uuid (str):
        date (datetime.date):
        body (list[str]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                body: list[str]
        new_parent_billing_entity_uuid: str
        date: datetime.date

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "body": serialize_argument(body),
        "new_parent_billing_entity_uuid": serialize_argument(new_parent_billing_entity_uuid),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.move_merchant_billing_hierarchies",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def move_merchant_billing_hierarchies_asyncio_detailed(
    *, client: StolonClient, body: list[str], new_parent_billing_entity_uuid: str, date: datetime.date
) -> Response[ResponseError]:
    """Move billing hierarchy merchants

    Args:
        new_parent_billing_entity_uuid (str):
        date (datetime.date):
        body (list[str]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                body: list[str]
        new_parent_billing_entity_uuid: str
        date: datetime.date

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "body": serialize_argument(body),
        "new_parent_billing_entity_uuid": serialize_argument(new_parent_billing_entity_uuid),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.move_merchant_billing_hierarchies",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def move_merchant_billing_hierarchies_asyncio(
    *, client: StolonClient, body: list[str], new_parent_billing_entity_uuid: str, date: datetime.date
) -> ResponseError | None:
    """Move billing hierarchy merchants

    Args:
        new_parent_billing_entity_uuid (str):
        date (datetime.date):
        body (list[str]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                body: list[str]
        new_parent_billing_entity_uuid: str
        date: datetime.date

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "body": serialize_argument(body),
        "new_parent_billing_entity_uuid": serialize_argument(new_parent_billing_entity_uuid),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.move_merchant_billing_hierarchies",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_by_uuid_sync_detailed(
    *, client: StolonClient, uuid: str
) -> Response[ApiBillingHierarchy | ResponseError]:
    """Get a billing hierarchy by UUID

    Args:
        uuid (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[Union[ApiBillingHierarchy, ResponseError]]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str

    Returns:
        Response[ApiBillingHierarchy | ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_by_uuid",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[Union[ApiBillingHierarchy, ResponseError]]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_by_uuid_sync(
    *, client: StolonClient, uuid: str
) -> ApiBillingHierarchy | ResponseError | None:
    """Get a billing hierarchy by UUID

    Args:
        uuid (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Union[ApiBillingHierarchy, ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str

    Returns:
        ApiBillingHierarchy | ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_by_uuid",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[Union[ApiBillingHierarchy, ResponseError]]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_by_uuid_asyncio_detailed(
    *, client: StolonClient, uuid: str
) -> Response[ApiBillingHierarchy | ResponseError]:
    """Get a billing hierarchy by UUID

    Args:
        uuid (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[Union[ApiBillingHierarchy, ResponseError]]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str

    Returns:
        Response[ApiBillingHierarchy | ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_by_uuid",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[Union[ApiBillingHierarchy, ResponseError]]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_by_uuid_asyncio(
    *, client: StolonClient, uuid: str
) -> ApiBillingHierarchy | ResponseError | None:
    """Get a billing hierarchy by UUID

    Args:
        uuid (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Union[ApiBillingHierarchy, ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str

    Returns:
        ApiBillingHierarchy | ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_by_uuid",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[Union[ApiBillingHierarchy, ResponseError]]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_date_nodes_for_entity_sync_detailed(
    *, client: StolonClient, entityuuid: str, type_: str
) -> Response[ResponseError]:
    """Get hierarchy relationship effective-date nodes for billing entity

    Args:
        entityuuid (str):
        type_ (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                entityuuid: str
        type_: str

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {"entityuuid": serialize_argument(entityuuid), "type_": serialize_argument(type_)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_date_nodes_for_entity",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_date_nodes_for_entity_sync(
    *, client: StolonClient, entityuuid: str, type_: str
) -> ResponseError | None:
    """Get hierarchy relationship effective-date nodes for billing entity

    Args:
        entityuuid (str):
        type_ (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                entityuuid: str
        type_: str

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {"entityuuid": serialize_argument(entityuuid), "type_": serialize_argument(type_)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_date_nodes_for_entity",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_date_nodes_for_entity_asyncio_detailed(
    *, client: StolonClient, entityuuid: str, type_: str
) -> Response[ResponseError]:
    """Get hierarchy relationship effective-date nodes for billing entity

    Args:
        entityuuid (str):
        type_ (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                entityuuid: str
        type_: str

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {"entityuuid": serialize_argument(entityuuid), "type_": serialize_argument(type_)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_date_nodes_for_entity",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_date_nodes_for_entity_asyncio(
    *, client: StolonClient, entityuuid: str, type_: str
) -> ResponseError | None:
    """Get hierarchy relationship effective-date nodes for billing entity

    Args:
        entityuuid (str):
        type_ (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                entityuuid: str
        type_: str

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {"entityuuid": serialize_argument(entityuuid), "type_": serialize_argument(type_)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_date_nodes_for_entity",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_parent_nodes_sync_detailed(
    *, client: StolonClient, billing_entity_uuid: str, hierarchy_type: str, date: datetime.date
) -> Response[ApiBillingHierarchyLevelNode]:
    """Get parent nodes of billing entity for specified hierarchy type

    Args:
        billing_entity_uuid (str):
        hierarchy_type (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ApiBillingHierarchyLevelNode]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                billing_entity_uuid: str
        hierarchy_type: str
        date: datetime.date

    Returns:
        Response[ApiBillingHierarchyLevelNode]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "billing_entity_uuid": serialize_argument(billing_entity_uuid),
        "hierarchy_type": serialize_argument(hierarchy_type),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_parent_nodes",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ApiBillingHierarchyLevelNode]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_parent_nodes_sync(
    *, client: StolonClient, billing_entity_uuid: str, hierarchy_type: str, date: datetime.date
) -> ApiBillingHierarchyLevelNode | None:
    """Get parent nodes of billing entity for specified hierarchy type

    Args:
        billing_entity_uuid (str):
        hierarchy_type (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ApiBillingHierarchyLevelNode

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                billing_entity_uuid: str
        hierarchy_type: str
        date: datetime.date

    Returns:
        ApiBillingHierarchyLevelNode | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "billing_entity_uuid": serialize_argument(billing_entity_uuid),
        "hierarchy_type": serialize_argument(hierarchy_type),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_parent_nodes",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ApiBillingHierarchyLevelNode]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_parent_nodes_asyncio_detailed(
    *, client: StolonClient, billing_entity_uuid: str, hierarchy_type: str, date: datetime.date
) -> Response[ApiBillingHierarchyLevelNode]:
    """Get parent nodes of billing entity for specified hierarchy type

    Args:
        billing_entity_uuid (str):
        hierarchy_type (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ApiBillingHierarchyLevelNode]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                billing_entity_uuid: str
        hierarchy_type: str
        date: datetime.date

    Returns:
        Response[ApiBillingHierarchyLevelNode]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "billing_entity_uuid": serialize_argument(billing_entity_uuid),
        "hierarchy_type": serialize_argument(hierarchy_type),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_parent_nodes",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ApiBillingHierarchyLevelNode]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_parent_nodes_asyncio(
    *, client: StolonClient, billing_entity_uuid: str, hierarchy_type: str, date: datetime.date
) -> ApiBillingHierarchyLevelNode | None:
    """Get parent nodes of billing entity for specified hierarchy type

    Args:
        billing_entity_uuid (str):
        hierarchy_type (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ApiBillingHierarchyLevelNode

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                billing_entity_uuid: str
        hierarchy_type: str
        date: datetime.date

    Returns:
        ApiBillingHierarchyLevelNode | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "billing_entity_uuid": serialize_argument(billing_entity_uuid),
        "hierarchy_type": serialize_argument(hierarchy_type),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_parent_nodes",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ApiBillingHierarchyLevelNode]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_archetypes_sync_detailed(
    *, client: StolonClient, uuid: str, date: datetime.date
) -> Response[ApiBillingHierarchyLevel]:
    """Get billing entity archetypes

    Args:
        uuid (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ApiBillingHierarchyLevel]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date

    Returns:
        Response[ApiBillingHierarchyLevel]
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid), "date": serialize_argument(date)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_archetypes",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ApiBillingHierarchyLevel]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_archetypes_sync(*, client: StolonClient, uuid: str, date: datetime.date) -> ApiBillingHierarchyLevel | None:
    """Get billing entity archetypes

    Args:
        uuid (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ApiBillingHierarchyLevel

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date

    Returns:
        ApiBillingHierarchyLevel | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid), "date": serialize_argument(date)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_archetypes",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ApiBillingHierarchyLevel]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_archetypes_asyncio_detailed(
    *, client: StolonClient, uuid: str, date: datetime.date
) -> Response[ApiBillingHierarchyLevel]:
    """Get billing entity archetypes

    Args:
        uuid (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ApiBillingHierarchyLevel]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date

    Returns:
        Response[ApiBillingHierarchyLevel]
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid), "date": serialize_argument(date)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_archetypes",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ApiBillingHierarchyLevel]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_archetypes_asyncio(*, client: StolonClient, uuid: str, date: datetime.date) -> ApiBillingHierarchyLevel | None:
    """Get billing entity archetypes

    Args:
        uuid (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ApiBillingHierarchyLevel

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date

    Returns:
        ApiBillingHierarchyLevel | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid), "date": serialize_argument(date)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_archetypes",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ApiBillingHierarchyLevel]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def delete_billing_hierarchy_by_uuid_sync_detailed(
    *, client: StolonClient, uuid: str, date: datetime.date
) -> Response[ApiBillingHierarchy | ResponseError]:
    """Mark billing hierarchy as deleted

    Args:
        uuid (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[Union[ApiBillingHierarchy, ResponseError]]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date

    Returns:
        Response[ApiBillingHierarchy | ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid), "date": serialize_argument(date)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.delete_billing_hierarchy_by_uuid",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[Union[ApiBillingHierarchy, ResponseError]]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def delete_billing_hierarchy_by_uuid_sync(
    *, client: StolonClient, uuid: str, date: datetime.date
) -> ApiBillingHierarchy | ResponseError | None:
    """Mark billing hierarchy as deleted

    Args:
        uuid (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Union[ApiBillingHierarchy, ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date

    Returns:
        ApiBillingHierarchy | ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid), "date": serialize_argument(date)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.delete_billing_hierarchy_by_uuid",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[Union[ApiBillingHierarchy, ResponseError]]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def delete_billing_hierarchy_by_uuid_asyncio_detailed(
    *, client: StolonClient, uuid: str, date: datetime.date
) -> Response[ApiBillingHierarchy | ResponseError]:
    """Mark billing hierarchy as deleted

    Args:
        uuid (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[Union[ApiBillingHierarchy, ResponseError]]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date

    Returns:
        Response[ApiBillingHierarchy | ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid), "date": serialize_argument(date)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.delete_billing_hierarchy_by_uuid",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[Union[ApiBillingHierarchy, ResponseError]]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def delete_billing_hierarchy_by_uuid_asyncio(
    *, client: StolonClient, uuid: str, date: datetime.date
) -> ApiBillingHierarchy | ResponseError | None:
    """Mark billing hierarchy as deleted

    Args:
        uuid (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Union[ApiBillingHierarchy, ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date

    Returns:
        ApiBillingHierarchy | ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid), "date": serialize_argument(date)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.delete_billing_hierarchy_by_uuid",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[Union[ApiBillingHierarchy, ResponseError]]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_children_of_entity_sync_detailed(
    *, client: StolonClient, entityuuid: str, type_: str, date: datetime.date
) -> Response[ResponseError]:
    """Get hierarchy children of billing entity

    Args:
        entityuuid (str):
        type_ (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                entityuuid: str
        type_: str
        date: datetime.date

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "entityuuid": serialize_argument(entityuuid),
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_children_of_entity",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_children_of_entity_sync(
    *, client: StolonClient, entityuuid: str, type_: str, date: datetime.date
) -> ResponseError | None:
    """Get hierarchy children of billing entity

    Args:
        entityuuid (str):
        type_ (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                entityuuid: str
        type_: str
        date: datetime.date

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "entityuuid": serialize_argument(entityuuid),
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_children_of_entity",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_children_of_entity_asyncio_detailed(
    *, client: StolonClient, entityuuid: str, type_: str, date: datetime.date
) -> Response[ResponseError]:
    """Get hierarchy children of billing entity

    Args:
        entityuuid (str):
        type_ (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                entityuuid: str
        type_: str
        date: datetime.date

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "entityuuid": serialize_argument(entityuuid),
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_children_of_entity",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_children_of_entity_asyncio(
    *, client: StolonClient, entityuuid: str, type_: str, date: datetime.date
) -> ResponseError | None:
    """Get hierarchy children of billing entity

    Args:
        entityuuid (str):
        type_ (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                entityuuid: str
        type_: str
        date: datetime.date

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "entityuuid": serialize_argument(entityuuid),
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_children_of_entity",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_effective_billing_hierarchy_sync_detailed(
    *, client: StolonClient, billing_entity_uuid: str, type_: str, date: datetime.date
) -> Response[ResponseError]:
    """Get the billing hierarchy node effective for the billing entity on the as-of date

    Args:
        billing_entity_uuid (str):
        type_ (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                billing_entity_uuid: str
        type_: str
        date: datetime.date

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "billing_entity_uuid": serialize_argument(billing_entity_uuid),
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_effective_billing_hierarchy",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_effective_billing_hierarchy_sync(
    *, client: StolonClient, billing_entity_uuid: str, type_: str, date: datetime.date
) -> ResponseError | None:
    """Get the billing hierarchy node effective for the billing entity on the as-of date

    Args:
        billing_entity_uuid (str):
        type_ (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                billing_entity_uuid: str
        type_: str
        date: datetime.date

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "billing_entity_uuid": serialize_argument(billing_entity_uuid),
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_effective_billing_hierarchy",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_effective_billing_hierarchy_asyncio_detailed(
    *, client: StolonClient, billing_entity_uuid: str, type_: str, date: datetime.date
) -> Response[ResponseError]:
    """Get the billing hierarchy node effective for the billing entity on the as-of date

    Args:
        billing_entity_uuid (str):
        type_ (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                billing_entity_uuid: str
        type_: str
        date: datetime.date

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "billing_entity_uuid": serialize_argument(billing_entity_uuid),
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_effective_billing_hierarchy",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_effective_billing_hierarchy_asyncio(
    *, client: StolonClient, billing_entity_uuid: str, type_: str, date: datetime.date
) -> ResponseError | None:
    """Get the billing hierarchy node effective for the billing entity on the as-of date

    Args:
        billing_entity_uuid (str):
        type_ (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                billing_entity_uuid: str
        type_: str
        date: datetime.date

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "billing_entity_uuid": serialize_argument(billing_entity_uuid),
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_effective_billing_hierarchy",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchies_sync_detailed(
    *, client: StolonClient, type_: str, date: datetime.date, name: str
) -> Response[ResponseError]:
    """Get billing hierarchies by name or entity uuid

    Args:
        type_ (str):
        date (datetime.date):
        name (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                type_: str
        date: datetime.date
        name: str

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
        "name": serialize_argument(name),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchies",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchies_sync(
    *, client: StolonClient, type_: str, date: datetime.date, name: str
) -> ResponseError | None:
    """Get billing hierarchies by name or entity uuid

    Args:
        type_ (str):
        date (datetime.date):
        name (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                type_: str
        date: datetime.date
        name: str

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
        "name": serialize_argument(name),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchies",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchies_asyncio_detailed(
    *, client: StolonClient, type_: str, date: datetime.date, name: str
) -> Response[ResponseError]:
    """Get billing hierarchies by name or entity uuid

    Args:
        type_ (str):
        date (datetime.date):
        name (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                type_: str
        date: datetime.date
        name: str

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
        "name": serialize_argument(name),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchies",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchies_asyncio(
    *, client: StolonClient, type_: str, date: datetime.date, name: str
) -> ResponseError | None:
    """Get billing hierarchies by name or entity uuid

    Args:
        type_ (str):
        date (datetime.date):
        name (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                type_: str
        date: datetime.date
        name: str

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
        "name": serialize_argument(name),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchies",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_parents_sync_detailed(
    *, client: StolonClient, uuid: str
) -> Response[ApiBillingHierarchyLevel]:
    """Get parents of billing hierarchy

    Args:
        uuid (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ApiBillingHierarchyLevel]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str

    Returns:
        Response[ApiBillingHierarchyLevel]
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_parents",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ApiBillingHierarchyLevel]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_parents_sync(*, client: StolonClient, uuid: str) -> ApiBillingHierarchyLevel | None:
    """Get parents of billing hierarchy

    Args:
        uuid (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ApiBillingHierarchyLevel

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str

    Returns:
        ApiBillingHierarchyLevel | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_parents",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ApiBillingHierarchyLevel]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_parents_asyncio_detailed(
    *, client: StolonClient, uuid: str
) -> Response[ApiBillingHierarchyLevel]:
    """Get parents of billing hierarchy

    Args:
        uuid (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ApiBillingHierarchyLevel]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str

    Returns:
        Response[ApiBillingHierarchyLevel]
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_parents",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ApiBillingHierarchyLevel]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_parents_asyncio(*, client: StolonClient, uuid: str) -> ApiBillingHierarchyLevel | None:
    """Get parents of billing hierarchy

    Args:
        uuid (str):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ApiBillingHierarchyLevel

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str

    Returns:
        ApiBillingHierarchyLevel | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {"uuid": serialize_argument(uuid)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_parents",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ApiBillingHierarchyLevel]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_child_nodes_sync_detailed(
    *,
    client: StolonClient,
    billing_entity_uuid: str,
    hierarchy_type: str,
    date: datetime.date,
    entity_types: Union[Unset, list[GetBillingHierarchyChildNodesEntityTypesItem]] = UNSET,
) -> Response[ApiBillingHierarchyLevelNode]:
    """Get child nodes of billing entity for specified hierarchy type

    Args:
        billing_entity_uuid (str):
        hierarchy_type (str):
        date (datetime.date):
        entity_types (Union[Unset, list[GetBillingHierarchyChildNodesEntityTypesItem]]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ApiBillingHierarchyLevelNode]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                billing_entity_uuid: str
        hierarchy_type: str
        date: datetime.date
        entity_types: Union[Unset, list[GetBillingHierarchyChildNodesEntityTypesItem]]

    Returns:
        Response[ApiBillingHierarchyLevelNode]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "billing_entity_uuid": serialize_argument(billing_entity_uuid),
        "hierarchy_type": serialize_argument(hierarchy_type),
        "date": serialize_argument(date),
        "entity_types": serialize_argument(entity_types),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_child_nodes",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ApiBillingHierarchyLevelNode]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_child_nodes_sync(
    *,
    client: StolonClient,
    billing_entity_uuid: str,
    hierarchy_type: str,
    date: datetime.date,
    entity_types: Union[Unset, list[GetBillingHierarchyChildNodesEntityTypesItem]] = UNSET,
) -> ApiBillingHierarchyLevelNode | None:
    """Get child nodes of billing entity for specified hierarchy type

    Args:
        billing_entity_uuid (str):
        hierarchy_type (str):
        date (datetime.date):
        entity_types (Union[Unset, list[GetBillingHierarchyChildNodesEntityTypesItem]]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ApiBillingHierarchyLevelNode

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                billing_entity_uuid: str
        hierarchy_type: str
        date: datetime.date
        entity_types: Union[Unset, list[GetBillingHierarchyChildNodesEntityTypesItem]]

    Returns:
        ApiBillingHierarchyLevelNode | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "billing_entity_uuid": serialize_argument(billing_entity_uuid),
        "hierarchy_type": serialize_argument(hierarchy_type),
        "date": serialize_argument(date),
        "entity_types": serialize_argument(entity_types),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_child_nodes",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ApiBillingHierarchyLevelNode]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_child_nodes_asyncio_detailed(
    *,
    client: StolonClient,
    billing_entity_uuid: str,
    hierarchy_type: str,
    date: datetime.date,
    entity_types: Union[Unset, list[GetBillingHierarchyChildNodesEntityTypesItem]] = UNSET,
) -> Response[ApiBillingHierarchyLevelNode]:
    """Get child nodes of billing entity for specified hierarchy type

    Args:
        billing_entity_uuid (str):
        hierarchy_type (str):
        date (datetime.date):
        entity_types (Union[Unset, list[GetBillingHierarchyChildNodesEntityTypesItem]]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ApiBillingHierarchyLevelNode]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                billing_entity_uuid: str
        hierarchy_type: str
        date: datetime.date
        entity_types: Union[Unset, list[GetBillingHierarchyChildNodesEntityTypesItem]]

    Returns:
        Response[ApiBillingHierarchyLevelNode]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "billing_entity_uuid": serialize_argument(billing_entity_uuid),
        "hierarchy_type": serialize_argument(hierarchy_type),
        "date": serialize_argument(date),
        "entity_types": serialize_argument(entity_types),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_child_nodes",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ApiBillingHierarchyLevelNode]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_child_nodes_asyncio(
    *,
    client: StolonClient,
    billing_entity_uuid: str,
    hierarchy_type: str,
    date: datetime.date,
    entity_types: Union[Unset, list[GetBillingHierarchyChildNodesEntityTypesItem]] = UNSET,
) -> ApiBillingHierarchyLevelNode | None:
    """Get child nodes of billing entity for specified hierarchy type

    Args:
        billing_entity_uuid (str):
        hierarchy_type (str):
        date (datetime.date):
        entity_types (Union[Unset, list[GetBillingHierarchyChildNodesEntityTypesItem]]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ApiBillingHierarchyLevelNode

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                billing_entity_uuid: str
        hierarchy_type: str
        date: datetime.date
        entity_types: Union[Unset, list[GetBillingHierarchyChildNodesEntityTypesItem]]

    Returns:
        ApiBillingHierarchyLevelNode | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "billing_entity_uuid": serialize_argument(billing_entity_uuid),
        "hierarchy_type": serialize_argument(hierarchy_type),
        "date": serialize_argument(date),
        "entity_types": serialize_argument(entity_types),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_child_nodes",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ApiBillingHierarchyLevelNode]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def create_billing_hierarchy_sync_detailed(
    *, client: StolonClient, body: ApiBillingHierarchy
) -> Response[ResponseError]:
    """Create billing hierarchy

    Args:
        body (ApiBillingHierarchy):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                body: ApiBillingHierarchy

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {"body": serialize_argument(body)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.create_billing_hierarchy",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def create_billing_hierarchy_sync(*, client: StolonClient, body: ApiBillingHierarchy) -> ResponseError | None:
    """Create billing hierarchy

    Args:
        body (ApiBillingHierarchy):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                body: ApiBillingHierarchy

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {"body": serialize_argument(body)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.create_billing_hierarchy",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def create_billing_hierarchy_asyncio_detailed(
    *, client: StolonClient, body: ApiBillingHierarchy
) -> Response[ResponseError]:
    """Create billing hierarchy

    Args:
        body (ApiBillingHierarchy):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                body: ApiBillingHierarchy

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {"body": serialize_argument(body)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.create_billing_hierarchy",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def create_billing_hierarchy_asyncio(*, client: StolonClient, body: ApiBillingHierarchy) -> ResponseError | None:
    """Create billing hierarchy

    Args:
        body (ApiBillingHierarchy):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                body: ApiBillingHierarchy

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {"body": serialize_argument(body)}

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.create_billing_hierarchy",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_parents_of_entity_sync_detailed(
    *, client: StolonClient, entityuuid: str, type_: str, date: datetime.date
) -> Response[ApiBillingHierarchyLevel]:
    """Get hierarchy parents of billing entity

    Args:
        entityuuid (str):
        type_ (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ApiBillingHierarchyLevel]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                entityuuid: str
        type_: str
        date: datetime.date

    Returns:
        Response[ApiBillingHierarchyLevel]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "entityuuid": serialize_argument(entityuuid),
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_parents_of_entity",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ApiBillingHierarchyLevel]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_parents_of_entity_sync(
    *, client: StolonClient, entityuuid: str, type_: str, date: datetime.date
) -> ApiBillingHierarchyLevel | None:
    """Get hierarchy parents of billing entity

    Args:
        entityuuid (str):
        type_ (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ApiBillingHierarchyLevel

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                entityuuid: str
        type_: str
        date: datetime.date

    Returns:
        ApiBillingHierarchyLevel | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "entityuuid": serialize_argument(entityuuid),
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_parents_of_entity",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ApiBillingHierarchyLevel]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_parents_of_entity_asyncio_detailed(
    *, client: StolonClient, entityuuid: str, type_: str, date: datetime.date
) -> Response[ApiBillingHierarchyLevel]:
    """Get hierarchy parents of billing entity

    Args:
        entityuuid (str):
        type_ (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ApiBillingHierarchyLevel]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                entityuuid: str
        type_: str
        date: datetime.date

    Returns:
        Response[ApiBillingHierarchyLevel]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "entityuuid": serialize_argument(entityuuid),
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_parents_of_entity",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ApiBillingHierarchyLevel]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_parents_of_entity_asyncio(
    *, client: StolonClient, entityuuid: str, type_: str, date: datetime.date
) -> ApiBillingHierarchyLevel | None:
    """Get hierarchy parents of billing entity

    Args:
        entityuuid (str):
        type_ (str):
        date (datetime.date):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ApiBillingHierarchyLevel

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                entityuuid: str
        type_: str
        date: datetime.date

    Returns:
        ApiBillingHierarchyLevel | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "entityuuid": serialize_argument(entityuuid),
        "type_": serialize_argument(type_),
        "date": serialize_argument(date),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_parents_of_entity",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ApiBillingHierarchyLevel]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_merchant_children_sync_detailed(
    *,
    client: StolonClient,
    uuid: str,
    date: datetime.date,
    name: Union[Unset, str] = UNSET,
    page_size: Union[Unset, int] = UNSET,
    page_number: Union[Unset, int] = UNSET,
) -> Response[ResponseError]:
    """Get immediate merchant children of billing hierarchy

    Args:
        uuid (str):
        date (datetime.date):
        name (Union[Unset, str]):
        page_size (Union[Unset, int]):
        page_number (Union[Unset, int]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date
        name: Union[Unset, str]
        page_size: Union[Unset, int]
        page_number: Union[Unset, int]

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "uuid": serialize_argument(uuid),
        "date": serialize_argument(date),
        "name": serialize_argument(name),
        "page_size": serialize_argument(page_size),
        "page_number": serialize_argument(page_number),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_merchant_children",
        variant="sync_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_merchant_children_sync(
    *,
    client: StolonClient,
    uuid: str,
    date: datetime.date,
    name: Union[Unset, str] = UNSET,
    page_size: Union[Unset, int] = UNSET,
    page_number: Union[Unset, int] = UNSET,
) -> ResponseError | None:
    """Get immediate merchant children of billing hierarchy

    Args:
        uuid (str):
        date (datetime.date):
        name (Union[Unset, str]):
        page_size (Union[Unset, int]):
        page_number (Union[Unset, int]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date
        name: Union[Unset, str]
        page_size: Union[Unset, int]
        page_number: Union[Unset, int]

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "uuid": serialize_argument(uuid),
        "date": serialize_argument(date),
        "name": serialize_argument(name),
        "page_size": serialize_argument(page_size),
        "page_number": serialize_argument(page_number),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_merchant_children",
        variant="sync",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_merchant_children_asyncio_detailed(
    *,
    client: StolonClient,
    uuid: str,
    date: datetime.date,
    name: Union[Unset, str] = UNSET,
    page_size: Union[Unset, int] = UNSET,
    page_number: Union[Unset, int] = UNSET,
) -> Response[ResponseError]:
    """Get immediate merchant children of billing hierarchy

    Args:
        uuid (str):
        date (datetime.date):
        name (Union[Unset, str]):
        page_size (Union[Unset, int]):
        page_number (Union[Unset, int]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[ResponseError]

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date
        name: Union[Unset, str]
        page_size: Union[Unset, int]
        page_number: Union[Unset, int]

    Returns:
        Response[ResponseError]
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "uuid": serialize_argument(uuid),
        "date": serialize_argument(date),
        "name": serialize_argument(name),
        "page_size": serialize_argument(page_size),
        "page_number": serialize_argument(page_number),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_merchant_children",
        variant="asyncio_detailed",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Response[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]


def get_billing_hierarchy_merchant_children_asyncio(
    *,
    client: StolonClient,
    uuid: str,
    date: datetime.date,
    name: Union[Unset, str] = UNSET,
    page_size: Union[Unset, int] = UNSET,
    page_number: Union[Unset, int] = UNSET,
) -> ResponseError | None:
    """Get immediate merchant children of billing hierarchy

    Args:
        uuid (str):
        date (datetime.date):
        name (Union[Unset, str]):
        page_size (Union[Unset, int]):
        page_number (Union[Unset, int]):

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        ResponseError

    This function invokes the OpenAPI-generated client function on the stolon server,
    enabling automatic token management, logging, and retry logic.

    Args:
        client: StolonClient instance for invoking server-side functions
                uuid: str
        date: datetime.date
        name: Union[Unset, str]
        page_size: Union[Unset, int]
        page_number: Union[Unset, int]

    Returns:
        ResponseError | None
    """
    # Serialize arguments for transport
    serialized_kwargs = {
        "uuid": serialize_argument(uuid),
        "date": serialize_argument(date),
        "name": serialize_argument(name),
        "page_size": serialize_argument(page_size),
        "page_number": serialize_argument(page_number),
    }

    # Invoke OpenAPI function on server
    response = client.invoke_openapi(
        service=OpenAPIService.BILLING_BOOKKEEPER_DEV,
        function_path="billing_hierarchy.get_billing_hierarchy_merchant_children",
        variant="asyncio",
        domain="dev1.dev.clover.com",
        environment_name="dev",
        kwargs=serialized_kwargs,
    )

    # Handle errors
    if not response.success:
        raise RuntimeError(f"OpenAPI invocation failed: {response.error}")

    # Deserialize result
    result = deserialize_result(
        response.result,
        "Optional[ResponseError]",
        "billing_bookkeeper_dev",
    )

    return result  # type: ignore[return-value]
